version: '1'
name: photo-prestiges
services:
  messagebroker:
    container_name: messagebroker
    image: rabbitmq:3.13-management
    networks:
      - main-net


  clock:
    build: ./clock-service
    ports:
      - "3040:3040"
    depends_on:
      - competitiondb
      - messagebroker
      - backend
    networks:
    - main-net  

  backend:
    container_name: backend
    build: 
      context: ./backend
      dockerfile: dockerfile
    command: npm run dev
    ports: 
      - 3000:3000
    environment:
      - PORT=3000
      - MESSAGE_QUEUE=amqp://messagebroker
    volumes:
      - "./backend:/usr/src/app/"
    networks:
      - main-net

  auth:
    container_name: auth-service
    build: 
      context: ./auth
      dockerfile: dockerfile
    command: npm run dev
    ports: 
      - 3020:3020
    environment:
      - PORT=3020
      - MONGO_URL=mongodb://admin:root1234@authdb:27017
      - MESSAGE_QUEUE=amqp://messagebroker
    depends_on:
      - authdb
    volumes:
      - "./auth:/usr/src/app/"
    networks:
      - main-net
      - auth-net

  competition:
    container_name: competition-service
    build: 
      context: ./competition
      dockerfile: dockerfile
    command: npm run dev
    ports: 
      - 3010:3010
    environment:
      - PORT=3010
      - MONGO_URL=mongodb://admin:root1234@competitiondb:27017
      - MESSAGE_QUEUE=amqp://messagebroker
    depends_on:
      - competitiondb
    volumes:
      - "./competition:/usr/src/app/"
    networks:
      - main-net
      - competition-net

  authdb:
    container_name: authdb
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=root1234
    ports:
      - 27100:27017
    volumes:
      - auth_data:/data/db
    networks:
      - auth-net
      - main-net

  competitiondb:
    container_name: competitiondb
    restart: always
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=root1234
    ports:
      - 27200:27017
    volumes:
      - competition_data:/data/db
    networks:
      - competition-net
      - main-net

  scoredb:
    image: mongo
    container_name: scoredb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=root1234
    ports:
      - 27019:27017 
    volumes:
      - scoredbdata:/data/db
    networks:
      - main-net

  mail:
    container_name: mail-service
    build:
      context: ./mail-service
      dockerfile: dockerfile
    command: npm run dev
    environment:
      - RABBIT_URL=amqp://messagebroker
      - QUEUE_NAME=register_mail
    depends_on:
      - messagebroker
   # volumes:
    #  - ./mail-service:/usr/src/app/
    networks:
      - main-net

  score:
    container_name: score-service
    build:
      context: ./score-service
      dockerfile: dockerfile
    command: npm run dev
    ports:
      - 3030:3030
    environment:
      - PORT=3030
    networks:
      - main-net
    volumes:
      - ./score-service:/usr/src/app/


volumes:
  auth_data:
  competition_data:
  scoredbdata:

networks:
  main-net:
    driver: bridge
  auth-net:
    driver: bridge 
  competition-net:
    driver: bridge
